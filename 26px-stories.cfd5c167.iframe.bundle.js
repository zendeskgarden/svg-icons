"use strict";(self.webpackChunk_zendeskgarden_svg_icons=self.webpackChunk_zendeskgarden_svg_icons||[]).push([[799],{"./src/.stories/26px.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Icons:()=>Icons,WordmarkLayouts:()=>WordmarkLayouts,Wordmarks:()=>Wordmarks,__namedExportsOrder:()=>__namedExportsOrder,default:()=>_26px_stories});var Grid=__webpack_require__("./node_modules/@zendeskgarden/react-grid/dist/esm/elements/Grid.js"),Row=__webpack_require__("./node_modules/@zendeskgarden/react-grid/dist/esm/elements/Row.js"),Col=__webpack_require__("./node_modules/@zendeskgarden/react-grid/dist/esm/elements/Col.js"),common=__webpack_require__("./src/.stories/common.js"),Icon=__webpack_require__("./src/.stories/Icon.js"),IconGrid=__webpack_require__("./src/.stories/IconGrid.js"),palette=__webpack_require__("./node_modules/@zendeskgarden/react-theming/dist/esm/elements/palette/index.js"),react=__webpack_require__("./node_modules/react/index.js");const SVGs=["zd-svg-icon-26-answer-bot","zd-svg-icon-26-app","zd-svg-icon-26-arrange-content","zd-svg-icon-26-arrow-right-left","zd-svg-icon-26-bar-chart","zd-svg-icon-26-book","zd-svg-icon-26-bot-generic","zd-svg-icon-26-building","zd-svg-icon-26-call-in","zd-svg-icon-26-chat","zd-svg-icon-26-checkbox","zd-svg-icon-26-clipboard","zd-svg-icon-26-clock","zd-svg-icon-26-cloud-upload","zd-svg-icon-26-credit-card","zd-svg-icon-26-customer-lists-fill","zd-svg-icon-26-customize","zd-svg-icon-26-dashboard","zd-svg-icon-26-ellipsis","zd-svg-icon-26-email-fill","zd-svg-icon-26-file-document","zd-svg-icon-26-file-error","zd-svg-icon-26-file-image","zd-svg-icon-26-file-pdf","zd-svg-icon-26-file-presentation","zd-svg-icon-26-file-spreadsheet","zd-svg-icon-26-file-zip","zd-svg-icon-26-file","zd-svg-icon-26-garden","zd-svg-icon-26-grid-add","zd-svg-icon-26-group-fill","zd-svg-icon-26-headset","zd-svg-icon-26-help-center","zd-svg-icon-26-home-fill","zd-svg-icon-26-hook","zd-svg-icon-26-knowledge-base","zd-svg-icon-26-line-chart","zd-svg-icon-26-macro","zd-svg-icon-26-moderation","zd-svg-icon-26-monitor","zd-svg-icon-26-organization","zd-svg-icon-26-person","zd-svg-icon-26-platform","zd-svg-icon-26-play","zd-svg-icon-26-relationshape-chat","zd-svg-icon-26-relationshape-connect","zd-svg-icon-26-relationshape-explore","zd-svg-icon-26-relationshape-gather","zd-svg-icon-26-relationshape-guide","zd-svg-icon-26-relationshape-message","zd-svg-icon-26-relationshape-sell","zd-svg-icon-26-relationshape-support","zd-svg-icon-26-relationshape-talk","zd-svg-icon-26-search","zd-svg-icon-26-security","zd-svg-icon-26-settings-fill","zd-svg-icon-26-shapes","zd-svg-icon-26-sunshine","zd-svg-icon-26-user-lock","zd-svg-icon-26-views-fill","zd-svg-icon-26-widget","zd-svg-icon-26-wordmark-bold-suite","zd-svg-icon-26-wordmark-bold-support","zd-svg-icon-26-wordmark-capital-suite","zd-svg-icon-26-wordmark-capital-the","zd-svg-icon-26-wordmark-capital-zendesk","zd-svg-icon-26-wordmark-chat","zd-svg-icon-26-wordmark-connect","zd-svg-icon-26-wordmark-explore","zd-svg-icon-26-wordmark-garden","zd-svg-icon-26-wordmark-gather","zd-svg-icon-26-wordmark-guide","zd-svg-icon-26-wordmark-help-center","zd-svg-icon-26-wordmark-inbox","zd-svg-icon-26-wordmark-message","zd-svg-icon-26-wordmark-messaging","zd-svg-icon-26-wordmark-reach","zd-svg-icon-26-wordmark-sell","zd-svg-icon-26-wordmark-sunshine","zd-svg-icon-26-wordmark-support","zd-svg-icon-26-wordmark-talk","zd-svg-icon-26-wordmark-zendesk","zd-svg-icon-26-workflow","zd-svg-icon-26-zendesk"];var styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const _26px_stories={title:"26 px"},args={fill:palette.A.kale[700],size:26},argTypes={...common.jx,size:{...common.jx.size,control:{...common.jx.size.control,max:104}}},propTypes={...common.sM},Icons={render:({color,fill,size})=>react.createElement(IconGrid.A,{color,fill,size,svgs:SVGs.filter((value=>!value.includes("wordmark")))}),args,argTypes,propTypes},Wordmarks={render:({color,fill,size})=>react.createElement(IconGrid.A,{color,columns:2,fill,size,svgs:SVGs.filter((value=>value.includes("wordmark")))}),args,argTypes,propTypes},StyledSpan=styled_components_browser_esm.Ay.span`
  display: inline-block;
  margin-top: 0.19em;
  margin-left: 0.92em;
  font-size: ${props=>props.size}px;
`,WordmarkLayouts={render:({color,fill,size})=>react.createElement(Grid.x,null,Object.keys(palette.A.product).map((product=>react.createElement(Row.f,{key:product},react.createElement(Col.f,{md:6,style:{marginBottom:20}},react.createElement(Icon.A,{color:color||palette.A.product[product],fill,id:`zd-svg-icon-26-relationshape-${product}`,size}),react.createElement(StyledSpan,{size},react.createElement(Icon.A,{color,id:`zd-svg-icon-26-wordmark-${product}`}))),react.createElement(Col.f,{md:6,style:{marginBottom:20}},react.createElement(Icon.A,{color,id:"zd-svg-icon-26-wordmark-zendesk",size}),react.createElement("span",{style:{display:"inline-block",marginLeft:".22em",fontSize:size}},react.createElement(Icon.A,{color,id:`zd-svg-icon-26-wordmark-${product}`})))))),react.createElement(Row.f,null,react.createElement(Col.f,{md:6,style:{marginBottom:20}},react.createElement(Icon.A,{color:color||palette.A.product.talk,fill,id:"zd-svg-icon-26-sunshine",size}),react.createElement(StyledSpan,{size},react.createElement(Icon.A,{color,id:"zd-svg-icon-26-wordmark-sunshine"}))),react.createElement(Col.f,{md:6,style:{marginBottom:20}},react.createElement(Icon.A,{color,id:"zd-svg-icon-26-wordmark-zendesk",size}),react.createElement("span",{style:{display:"inline-block",marginLeft:".22em",fontSize:size}},react.createElement(Icon.A,{color,id:"zd-svg-icon-26-wordmark-sunshine"})))),react.createElement(Row.f,null,react.createElement(Col.f,{md:6,style:{marginBottom:20}},react.createElement(Icon.A,{color:color||palette.A.green[400],fill,id:"zd-svg-icon-26-garden",size}),react.createElement(StyledSpan,{size},react.createElement(Icon.A,{color,id:"zd-svg-icon-26-wordmark-garden"}))),react.createElement(Col.f,{md:6,style:{marginBottom:20}},react.createElement(Icon.A,{color,id:"zd-svg-icon-26-wordmark-zendesk",size}),react.createElement("span",{style:{display:"inline-block",marginLeft:".22em",fontSize:size}},react.createElement(Icon.A,{color,id:"zd-svg-icon-26-wordmark-garden"})))),react.createElement(Row.f,null,react.createElement(Col.f,{md:6,style:{marginBottom:20}},react.createElement(Icon.A,{color:color||palette.A.kale[700],fill,id:"zd-svg-icon-26-zendesk",size}),react.createElement(StyledSpan,{size,style:{marginTop:".14em"}},react.createElement(Icon.A,{color,id:"zd-svg-icon-26-wordmark-capital-the"})," ",react.createElement(Icon.A,{color,id:"zd-svg-icon-26-wordmark-capital-zendesk"})," ",react.createElement(Icon.A,{color,id:"zd-svg-icon-26-wordmark-capital-suite"}))),react.createElement(Col.f,{md:6,style:{marginBottom:20}},react.createElement(Icon.A,{color,id:"zd-svg-icon-26-wordmark-capital-zendesk",size}),react.createElement("span",{style:{display:"inline-block",marginLeft:".22em",fontSize:size}},react.createElement(Icon.A,{color,id:"zd-svg-icon-26-wordmark-capital-suite"}))))),args,argTypes:{...argTypes,size:{...argTypes.size,control:{...argTypes.size.control,min:16,max:48}}},propTypes},__namedExportsOrder=["Icons","Wordmarks","WordmarkLayouts"];Icons.parameters={...Icons.parameters,docs:{...Icons.parameters?.docs,source:{originalSource:"{\n  render: ({\n    color,\n    fill,\n    size\n  }) => <IconGrid color={color} fill={fill} size={size} svgs={SVGs.filter(value => {\n    return !value.includes('wordmark');\n  })} />,\n  args,\n  argTypes,\n  propTypes\n}",...Icons.parameters?.docs?.source}}},Wordmarks.parameters={...Wordmarks.parameters,docs:{...Wordmarks.parameters?.docs,source:{originalSource:"{\n  render: ({\n    color,\n    fill,\n    size\n  }) => <IconGrid color={color} columns={2} fill={fill} size={size} svgs={SVGs.filter(value => {\n    return value.includes('wordmark');\n  })} />,\n  args,\n  argTypes,\n  propTypes\n}",...Wordmarks.parameters?.docs?.source}}},WordmarkLayouts.parameters={...WordmarkLayouts.parameters,docs:{...WordmarkLayouts.parameters?.docs,source:{originalSource:'{\n  render: ({\n    color,\n    fill,\n    size\n  }) => <Grid>\n      {Object.keys(PALETTE.product).map(product => <Row key={product}>\n          <Col md={6} style={{\n        marginBottom: 20\n      }}>\n            <Icon color={color || PALETTE.product[product]} fill={fill} id={`zd-svg-icon-26-relationshape-${product}`} size={size} />\n            <StyledSpan size={size}>\n              <Icon color={color} id={`zd-svg-icon-26-wordmark-${product}`} />\n            </StyledSpan>\n          </Col>\n          <Col md={6} style={{\n        marginBottom: 20\n      }}>\n            <Icon color={color} id="zd-svg-icon-26-wordmark-zendesk" size={size} />\n            <span style={{\n          display: \'inline-block\',\n          marginLeft: \'.22em\',\n          fontSize: size\n        }}>\n              <Icon color={color} id={`zd-svg-icon-26-wordmark-${product}`} />\n            </span>\n          </Col>\n        </Row>)}\n      <Row>\n        <Col md={6} style={{\n        marginBottom: 20\n      }}>\n          <Icon color={color || PALETTE.product.talk} fill={fill} id="zd-svg-icon-26-sunshine" size={size} />\n          <StyledSpan size={size}>\n            <Icon color={color} id="zd-svg-icon-26-wordmark-sunshine" />\n          </StyledSpan>\n        </Col>\n        <Col md={6} style={{\n        marginBottom: 20\n      }}>\n          <Icon color={color} id="zd-svg-icon-26-wordmark-zendesk" size={size} />\n          <span style={{\n          display: \'inline-block\',\n          marginLeft: \'.22em\',\n          fontSize: size\n        }}>\n            <Icon color={color} id="zd-svg-icon-26-wordmark-sunshine" />\n          </span>\n        </Col>\n      </Row>\n      <Row>\n        <Col md={6} style={{\n        marginBottom: 20\n      }}>\n          <Icon color={color || PALETTE.green[400]} fill={fill} id="zd-svg-icon-26-garden" size={size} />\n          <StyledSpan size={size}>\n            <Icon color={color} id="zd-svg-icon-26-wordmark-garden" />\n          </StyledSpan>\n        </Col>\n        <Col md={6} style={{\n        marginBottom: 20\n      }}>\n          <Icon color={color} id="zd-svg-icon-26-wordmark-zendesk" size={size} />\n          <span style={{\n          display: \'inline-block\',\n          marginLeft: \'.22em\',\n          fontSize: size\n        }}>\n            <Icon color={color} id="zd-svg-icon-26-wordmark-garden" />\n          </span>\n        </Col>\n      </Row>\n      <Row>\n        <Col md={6} style={{\n        marginBottom: 20\n      }}>\n          <Icon color={color || PALETTE.kale[700]} fill={fill} id="zd-svg-icon-26-zendesk" size={size} />\n          <StyledSpan size={size} style={{\n          marginTop: \'.14em\'\n        }}>\n            <Icon color={color} id="zd-svg-icon-26-wordmark-capital-the" />\n            &nbsp;\n            <Icon color={color} id="zd-svg-icon-26-wordmark-capital-zendesk" />\n            &nbsp;\n            <Icon color={color} id="zd-svg-icon-26-wordmark-capital-suite" />\n          </StyledSpan>\n        </Col>\n        <Col md={6} style={{\n        marginBottom: 20\n      }}>\n          <Icon color={color} id="zd-svg-icon-26-wordmark-capital-zendesk" size={size} />\n          <span style={{\n          display: \'inline-block\',\n          marginLeft: \'.22em\',\n          fontSize: size\n        }}>\n            <Icon color={color} id="zd-svg-icon-26-wordmark-capital-suite" />\n          </span>\n        </Col>\n      </Row>\n    </Grid>,\n  args,\n  argTypes: {\n    ...argTypes,\n    size: {\n      ...argTypes.size,\n      control: {\n        ...argTypes.size.control,\n        min: 16,\n        max: 48\n      }\n    }\n  },\n  propTypes\n}',...WordmarkLayouts.parameters?.docs?.source}}}}}]);
//# sourceMappingURL=26px-stories.cfd5c167.iframe.bundle.js.map